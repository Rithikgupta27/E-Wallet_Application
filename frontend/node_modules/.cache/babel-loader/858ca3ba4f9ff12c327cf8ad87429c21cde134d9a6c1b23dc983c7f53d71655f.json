{"ast":null,"code":"import axios from \"../API/axios\";\nconst AuthService = {\n  loginUser: async (mobileNumber, password) => {\n    try {\n      const response = await axios.post(\"/login\", {\n        mobileNumber,\n        password\n      });\n      if (response.data) {\n        // Extracting the uniqueId from the customerSession string\n        const uniqueId = response.data.split('uniqueId=')[1].split(',')[0];\n        // Store the uniqueId in local storage for further authentication or session management\n        localStorage.setItem('uniqueId', uniqueId);\n        localStorage.setItem('mobileNumber', mobileNumber);\n      }\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  },\n  logoutUser: async uniqueId => {\n    try {\n      // const response = await axios.patch(`/logout/${uniqueId}`);\n      localStorage.removeItem('uniqueId');\n      localStorage.removeItem('kyc');\n      // return response.data;\n    } catch (error) {\n      // console.error('Error during logout:', error);\n      // throw new Error('Logout failed. Please try again.');\n      alert(\"Logout failed. Please try again later.\");\n    }\n  },\n  signinUser: async mobileNumber => {\n    try {\n      const response = await axios.post(\"/signUp\", {\n        mobileNumber\n      });\n      const otp = response.data;\n      localStorage.setItem('otp', otp);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  registerUser: async userData => {\n    try {\n      const response = await axios.post('/customer', userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  forgotPassword: async mobileNumber => {\n    try {\n      const response = await axios.post(\"/forgotPassword\", {\n        mobileNumber\n      });\n      const otp = response.data;\n      localStorage.setItem('otp', otp);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  },\n  updatePassword: async (mobileNumber, password) => {\n    try {\n      const response = await axios.post(\"/customer/updatePassword\", {\n        mobileNumber,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  }\n};\nexport default AuthService;","map":{"version":3,"names":["axios","AuthService","loginUser","mobileNumber","password","response","post","data","uniqueId","split","localStorage","setItem","error","logoutUser","removeItem","alert","signinUser","otp","registerUser","userData","forgotPassword","updatePassword"],"sources":["C:/Users/Hp/Desktop/testing/frontend/src/services/Auth/AuthService.js"],"sourcesContent":["import axios from \"../API/axios\";\r\n\r\nconst AuthService = {\r\n    loginUser: async (mobileNumber, password) => {\r\n    try {\r\n      const response = await axios.post(\"/login\", {\r\n        mobileNumber,\r\n        password,\r\n      });\r\n      if (response.data) {\r\n        // Extracting the uniqueId from the customerSession string\r\n        const uniqueId = response.data.split('uniqueId=')[1].split(',')[0];    \r\n        // Store the uniqueId in local storage for further authentication or session management\r\n        localStorage.setItem('uniqueId', uniqueId); \r\n        localStorage.setItem('mobileNumber', mobileNumber);\r\n        }\r\n      return response;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  logoutUser: async (uniqueId) => {\r\n    try {\r\n      // const response = await axios.patch(`/logout/${uniqueId}`);\r\n      localStorage.removeItem('uniqueId');\r\n      localStorage.removeItem('kyc');\r\n      // return response.data;\r\n    } catch (error) {\r\n        // console.error('Error during logout:', error);\r\n        // throw new Error('Logout failed. Please try again.');\r\n        alert(\"Logout failed. Please try again later.\")\r\n    }\r\n},\r\n  signinUser: async (mobileNumber) => {\r\n    try {\r\n      const response = await axios.post(\"/signUp\", {\r\n        mobileNumber,\r\n      });\r\n      const otp = response.data;\r\n      localStorage.setItem('otp', otp);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  registerUser: async (userData) => {\r\n    try {\r\n      const response = await axios.post('/customer', userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error; \r\n    }\r\n  },\r\n  forgotPassword: async (mobileNumber) => {\r\n    try {\r\n      const response = await axios.post(\"/forgotPassword\", {\r\n        mobileNumber,\r\n      });\r\n      const otp = response.data;\r\n      localStorage.setItem('otp', otp);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n  updatePassword: async (mobileNumber, password) => {\r\n    try {\r\n      const response = await axios.post(\"/customer/updatePassword\", {\r\n        mobileNumber,\r\n        password,\r\n      });\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  },\r\n\r\n};\r\n\r\nexport default AuthService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,cAAc;AAEhC,MAAMC,WAAW,GAAG;EAChBC,SAAS,EAAE,MAAAA,CAAOC,YAAY,EAAEC,QAAQ,KAAK;IAC7C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,QAAQ,EAAE;QAC1CH,YAAY;QACZC;MACF,CAAC,CAAC;MACF,IAAIC,QAAQ,CAACE,IAAI,EAAE;QACjB;QACA,MAAMC,QAAQ,GAAGH,QAAQ,CAACE,IAAI,CAACE,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAClE;QACAC,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,QAAQ,CAAC;QAC1CE,YAAY,CAACC,OAAO,CAAC,cAAc,EAAER,YAAY,CAAC;MAClD;MACF,OAAOE,QAAQ;IACjB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EACDC,UAAU,EAAE,MAAOL,QAAQ,IAAK;IAC9B,IAAI;MACF;MACAE,YAAY,CAACI,UAAU,CAAC,UAAU,CAAC;MACnCJ,YAAY,CAACI,UAAU,CAAC,KAAK,CAAC;MAC9B;IACF,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZ;MACA;MACAG,KAAK,CAAC,wCAAwC,CAAC;IACnD;EACJ,CAAC;EACCC,UAAU,EAAE,MAAOb,YAAY,IAAK;IAClC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,SAAS,EAAE;QAC3CH;MACF,CAAC,CAAC;MACF,MAAMc,GAAG,GAAGZ,QAAQ,CAACE,IAAI;MACzBG,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEM,GAAG,CAAC;MAChC,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EACDM,YAAY,EAAE,MAAOC,QAAQ,IAAK;IAChC,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,WAAW,EAAEa,QAAQ,CAAC;MACxD,OAAOd,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EACDQ,cAAc,EAAE,MAAOjB,YAAY,IAAK;IACtC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,iBAAiB,EAAE;QACnDH;MACF,CAAC,CAAC;MACF,MAAMc,GAAG,GAAGZ,QAAQ,CAACE,IAAI;MACzBG,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEM,GAAG,CAAC;MAChC,OAAOZ,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EACDS,cAAc,EAAE,MAAAA,CAAOlB,YAAY,EAAEC,QAAQ,KAAK;IAChD,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,0BAA0B,EAAE;QAC5DH,YAAY;QACZC;MACF,CAAC,CAAC;MACF,OAAOC,QAAQ,CAACE,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF;AAEF,CAAC;AAED,eAAeX,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}