{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\testing\\\\frontend\\\\src\\\\components\\\\DashBoard\\\\Tables\\\\TransactionTable.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Table.css';\nimport axios from '../../../services/API/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionTable = () => {\n  _s();\n  const [trans, setTrans] = useState([]);\n  useEffect(() => {\n    document.title = \"All Your Transaction\";\n  }, []);\n  const AllTrans = () => {\n    const uniqueId = localStorage.getItem('uniqueId');\n    // const uniqueId = 'B9WzsTVS';\n    axios.get(`/viewAllTransaction/${uniqueId}`).then(response => {\n      console.log(response.data);\n      setTrans(response.data);\n    }, error => {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    AllTrans();\n  }, []);\n  // | transaction_id | amount | bank_transaction_id | description | transaction_date | transaction_type | wallet_id |\n  // const randomNumber = 1694509;\n  function formatTransactionDate(transactionDate) {\n    // Extracting date and time parts\n    let datePart = transactionDate.split(\"T\")[0];\n    let timePart = transactionDate.split(\"T\")[1];\n\n    // Removing hyphens from date and colons from time\n    let dateWithoutHyphens = datePart.replace(/-/g, \"\");\n    let timeWithoutColons = timePart.replace(/:/g, \"\").slice(0, -7);\n    return dateWithoutHyphens + timeWithoutColons;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"subheading\",\n      children: \"TRANSACTIONS HISTORY\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table-container custom-table\",\n      children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"TransactionId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"TransactionType\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this), trans.length > 0 ? trans.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: [formatTransactionDate(item.transactionDate), item.transactionId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.transactionType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\"Rs. \", item.amount]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: [\" \", item.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: item.transactionDate.slice(0, -7)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)]\n      }, item.transactionId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 30\n      }, this)) : \"No Transaction\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionTable, \"vNDkrsJTU/ksLu9oekODP16GS80=\");\n_c = TransactionTable;\nexport default TransactionTable;\nvar _c;\n$RefreshReg$(_c, \"TransactionTable\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TransactionTable","_s","trans","setTrans","document","title","AllTrans","uniqueId","localStorage","getItem","get","then","response","console","log","data","error","formatTransactionDate","transactionDate","datePart","split","timePart","dateWithoutHyphens","replace","timeWithoutColons","slice","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","map","item","transactionId","transactionType","amount","description","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/testing/frontend/src/components/DashBoard/Tables/TransactionTable.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport './Table.css'\r\nimport axios from '../../../services/API/axios';\r\n\r\nconst TransactionTable = () => {\r\n  const [trans, setTrans] = useState([]);\r\n  useEffect(()=>{\r\n    document.title=\"All Your Transaction\"\r\n  },[]);\r\n\r\n  const AllTrans = () =>{\r\n    const uniqueId = localStorage.getItem('uniqueId');\r\n    // const uniqueId = 'B9WzsTVS';\r\n    axios.get(`/viewAllTransaction/${uniqueId}`).then(\r\n      (response)=>{\r\n           console.log(response.data);\r\n           setTrans(response.data);\r\n      },\r\n      (error)=>{\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n  useEffect(()=>{\r\n    AllTrans()\r\n  },[]);\r\n  // | transaction_id | amount | bank_transaction_id | description | transaction_date | transaction_type | wallet_id |\r\n  // const randomNumber = 1694509;\r\n  function formatTransactionDate(transactionDate) {\r\n    // Extracting date and time parts\r\n    let datePart = transactionDate.split(\"T\")[0];\r\n    let timePart = transactionDate.split(\"T\")[1];\r\n    \r\n    // Removing hyphens from date and colons from time\r\n    let dateWithoutHyphens = datePart.replace(/-/g, \"\");\r\n    let timeWithoutColons = timePart.replace(/:/g, \"\").slice(0, -7);\r\n    \r\n    return dateWithoutHyphens + timeWithoutColons;\r\n  }\r\n  return (\r\n    <div>\r\n    <h1 className='subheading'>TRANSACTIONS HISTORY</h1>\r\n    <table className='table-container custom-table'> \r\n      <tr>\r\n        <th>TransactionId</th>\r\n        <th>TransactionType</th>\r\n        <th>Amount</th>\r\n        <th>Description</th>\r\n        <th>Date</th>\r\n\r\n      </tr>\r\n      {trans.length > 0 ? \r\n          trans.map((item)=>(<tr key = {item.transactionId}>\r\n      <td>{formatTransactionDate(item.transactionDate)}{item.transactionId}</td>\r\n      <td>{item.transactionType}</td>\r\n      <td>Rs. {item.amount}</td>\r\n      <td> {item.description}</td>\r\n      <td>{(item.transactionDate).slice(0, -7)}</td>\r\n     </tr>)):\"No Transaction\"}\r\n     </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TransactionTable\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}