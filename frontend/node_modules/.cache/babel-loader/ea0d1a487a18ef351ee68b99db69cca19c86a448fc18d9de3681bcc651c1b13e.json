{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\testing\\\\frontend\\\\src\\\\components\\\\DashBoard\\\\Forms\\\\AddAccountForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './Form.css';\nimport axios from '../../../services/API/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddAccountForm = () => {\n  _s();\n  const [accountNo, setAccountNo] = useState(\"\");\n  const [amount, setAmount] = useState(Math.floor(Math.random() * 1000000));\n  const [ifsc, setIfsc] = useState(\"\");\n  const [bankName, setBankName] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const changedBankAccount = events => {\n    setAccountNo(events.target.value);\n  };\n  const changedIfsc = events => {\n    setIfsc(events.target.value);\n  };\n  const changedBankName = events => {\n    setBankName(events.target.value);\n  };\n  const addAccount = (accountNo, bankName, ifscCode, balance, uniqueId) => {\n    setErrorMessage(\"Enter correct IFSC\");\n    return axios.post(`/bankaccount/${uniqueId}`, {\n      accountNo,\n      bankName,\n      ifscCode,\n      balance\n    }).then(response => {\n      setSuccessMessage(\"Bank Account added Successfully\");\n      return response;\n    }).catch(error => {\n      console.log(\"In add acc:\" + error);\n      setErrorMessage(\"Failed to Add Bank Account or Account already connected.\");\n    });\n  };\n  const clickSubmit = events => {\n    setSuccessMessage(\"\");\n    setErrorMessage(\"\");\n    events.preventDefault();\n    if (!accountNo || !bankName || !ifsc) {\n      setErrorMessage(\"All fields are mandatory ..\");\n      return;\n    }\n    if (isNaN(accountNo) || accountNo.length !== 12) {\n      setErrorMessage(\"Bank account must be 12 digit\");\n      return;\n    }\n    if (ifsc.length !== 6) {\n      setErrorMessage(\"Enter correct IFSC\");\n      return;\n    }\n    setAmount(Math.floor(Math.random() * 1000000));\n    console.log(amount);\n    try {\n      const uniqueId = localStorage.getItem('uniqueId');\n      addAccount(accountNo, bankName, ifsc, amount, uniqueId);\n    } catch (error) {\n      setErrorMessage(\"Failed to Add Bank Account\");\n    }\n    setAccountNo('');\n    setBankName('');\n    setIfsc('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"styled-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"subheading\",\n        children: \"ADD BANK ACCOUNT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: clickSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bank Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"bankname\",\n          name: \"bankname\",\n          value: bankName,\n          onChange: changedBankName,\n          placeholder: \"Bank Abbreviation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Bank Account:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"accountNo\",\n          name: \"accountNo\",\n          value: accountNo,\n          onChange: changedBankAccount,\n          placeholder: \"12 digit Account Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"IFSC Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"ifsc\",\n          name: \"ifsc\",\n          value: ifsc,\n          onChange: changedIfsc,\n          placeholder: \"Enter Ifsc 6-letter Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 10\n        }, this), successMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-green-500 mb-4\",\n          children: successMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-red-500 mb-4\",\n          children: errorMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add Bank Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 10\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AddAccountForm, \"MmSuhGa3HwhIavFqBKFIuAZyQJY=\");\n_c = AddAccountForm;\nexport default AddAccountForm;\nvar _c;\n$RefreshReg$(_c, \"AddAccountForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AddAccountForm","_s","accountNo","setAccountNo","amount","setAmount","Math","floor","random","ifsc","setIfsc","bankName","setBankName","errorMessage","setErrorMessage","successMessage","setSuccessMessage","changedBankAccount","events","target","value","changedIfsc","changedBankName","addAccount","ifscCode","balance","uniqueId","post","then","response","catch","error","console","log","clickSubmit","preventDefault","isNaN","length","localStorage","getItem","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","onChange","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/testing/frontend/src/components/DashBoard/Forms/AddAccountForm.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './Form.css';\r\nimport axios from '../../../services/API/axios'\r\n\r\nconst AddAccountForm = () => {\r\n    const [accountNo, setAccountNo] = useState(\"\");\r\n    const [amount, setAmount] = useState(Math.floor(Math.random() * (1000000)));\r\n    const [ifsc, setIfsc] = useState(\"\");\r\n    const [bankName, setBankName] = useState(\"\")\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [successMessage, setSuccessMessage] = useState('');\r\n    \r\n    const changedBankAccount = (events) =>{\r\n        setAccountNo(events.target.value);\r\n    }\r\n    const changedIfsc = (events) =>{\r\n        setIfsc(events.target.value);\r\n    }\r\n    const changedBankName = (events) =>{\r\n        setBankName(events.target.value);\r\n    }\r\n\r\n    const addAccount = (accountNo, bankName, ifscCode, balance, uniqueId) => {\r\n      setErrorMessage(\"Enter correct IFSC\");\r\n      return axios.post(`/bankaccount/${uniqueId}`, {\r\n        accountNo, bankName, ifscCode, balance\r\n      })\r\n      .then(response => {\r\n        setSuccessMessage(\"Bank Account added Successfully\");\r\n        return response;\r\n      })\r\n      .catch(error => {\r\n        console.log(\"In add acc:\"+ error);\r\n        setErrorMessage(\"Failed to Add Bank Account or Account already connected.\");\r\n      });\r\n    }\r\n\r\n    const clickSubmit = (events) =>{\r\n      setSuccessMessage(\"\");\r\n      setErrorMessage(\"\");\r\n      events.preventDefault();\r\n      if (!accountNo || !bankName || !ifsc ){\r\n        setErrorMessage(\"All fields are mandatory ..\");\r\n        return;\r\n      }\r\n      if (isNaN(accountNo) || accountNo.length !== 12){\r\n        setErrorMessage(\"Bank account must be 12 digit\");\r\n        return;\r\n      }\r\n      if (ifsc.length !== 6){\r\n        setErrorMessage(\"Enter correct IFSC\");\r\n        return;\r\n      }\r\n      setAmount(Math.floor(Math.random() * (1000000)));\r\n      console.log(amount);\r\n      try{\r\n        const uniqueId = localStorage.getItem('uniqueId');\r\n        addAccount(accountNo, bankName, ifsc, amount, uniqueId);\r\n      } catch(error){\r\n        setErrorMessage(\"Failed to Add Bank Account\");\r\n      }\r\n      setAccountNo('');\r\n      setBankName('');\r\n      setIfsc('');\r\n    }\r\n  return (\r\n    <div >\r\n       <div className=\"styled-form\">\r\n        <h1 className='subheading'>ADD BANK ACCOUNT</h1>\r\n       <form  onSubmit={clickSubmit}>\r\n         <label >Bank Name:</label>\r\n         <input type=\"text\" id=\"bankname\" name=\"bankname\" value={bankName} onChange={changedBankName} placeholder='Bank Abbreviation'/>\r\n         <label >Bank Account:</label>\r\n         <input type=\"text\" id=\"accountNo\" name=\"accountNo\" value={accountNo} onChange={changedBankAccount} placeholder='12 digit Account Number'/>\r\n         <label >IFSC Code:</label>\r\n         <input type=\"text\" id=\"ifsc\" name=\"ifsc\" value={ifsc} onChange={changedIfsc} placeholder='Enter Ifsc 6-letter Code'/>\r\n\r\n         {successMessage && <div className=\"text-green-500 mb-4\">{successMessage}</div>}\r\n         {errorMessage && <div className=\"text-red-500 mb-4\">{errorMessage}</div>}\r\n         <button type=\"submit\">Add Bank Account</button>\r\n       </form>\r\n       </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddAccountForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}